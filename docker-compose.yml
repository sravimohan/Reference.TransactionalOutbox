version: "3.2"
services:
  localstack:
    image: localstack/localstack:latest
    environment:
      - DEBUG=0
      - LS_LOG=info
    ports:
      - 4566:4566

  sql-server-db:
    container_name: sql-server-db
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
      - "1433:1433"
    command: /usr/src/sql/entrypoint.sh
    volumes:
      - ./sql:/usr/src/sql/
    environment:
      SA_PASSWORD: "Password123!"
      ACCEPT_EULA: "Y"

  api:
    build:
      context: .
      dockerfile: Dockerfile.Api
    depends_on:
      - localstack
      - sql-server-db
    expose:
      - 80
    environment:
      AWS_ACCESS_KEY_ID: 'DUMMYIDEXAMPLE'
      AWS_SECRET_ACCESS_KEY: 'DUMMYEXAMPLEKEY'
      AWS_DEFAULT_REGION: 'us-east-1'
      AWS__ServiceURL: 'http://localstack:4566'
      ASPNETCORE_URLS: http://+:80
      DOTNET_RUNNING_IN_CONTAINER: 'true'
      ConnectionStrings__Reference: 'data source=sql-server-db;initial catalog=Reference;persist security info=True;user id=sa;password=Password123!'
    volumes:
      - ./coverage:/coverage

  proxy:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - api
    ports:
      - "5000:5000"

  test-runner:
    depends_on:
      - proxy
    build:
      context: .
      dockerfile: Dockerfile.Test
    environment:
      AWS_ACCESS_KEY_ID: 'DUMMYIDEXAMPLE'
      AWS_SECRET_ACCESS_KEY: 'DUMMYEXAMPLEKEY'
      AWS_DEFAULT_REGION: 'us-east-1'
      IS_COVERAGE_ENABLED: 'false'
    volumes:
      - ./coverage:/coverage

networks:
  default:
    driver: bridge
